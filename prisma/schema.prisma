generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String       @id @default(cuid()) @map("_id")
  name              String?
  email             String       @unique
  emailVerified     DateTime?
  image             String?
  password          String
  verifyToken       String?      @unique
  verifyTokenExpiry DateTime?
  role              String       @default("USER")
  accounts          Account[]
  sessions          Session[]
  immobiliers       Immobilier[]
}

model VerificationToken {
  id         String   @id @default(cuid()) @map("_id")
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Immobilier {
  id          String   @id @default(cuid()) @map("_id")
  title       String
  description String
  price       Float
  address     String
  city        String
  zipCode     String
  surface     Float
  rooms       Int
  bedrooms    Int
  bathrooms   Int
  type        String   // "HOUSE", "APARTMENT", etc.
  status      String   // "FOR_SALE", "FOR_RENT"
  images      String[] // URLs des images
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("immobiliers")
}